--- net/ipv6/ip6_output.c
+++ net/ipv6/ip6_output.c
@@ -1174,7 +1174,8 @@
 		skb_shinfo(skb)->ip6_frag_id = fhdr.identification;
 		__skb_queue_tail(&sk->sk_write_queue, skb);
 	}
-	return skb_append_datato_frags(sk, skb, getfrag, from, (length - transhdrlen));
+	return skb_append_datato_frags(sk, skb, getfrag, from,
+					(length - transhdrlen));
 }
 
 static inline struct ipv6_opt_hdr *ip6_opt_dup(struct ipv6_opt_hdr *src,
@@ -1346,10 +1347,13 @@
 		ipv6_local_rxpmtu(sk, fl6, mtu-exthdrlen);
 		return -EMSGSIZE;
 	}
+
 	skb = skb_peek_tail(&sk->sk_write_queue);
 	cork->length += length;
-	if (((length > mtu) || (skb && skb_is_gso(skb))) && (sk->sk_protocol == IPPROTO_UDP) && 
-		(rt->dst.dev->features & NETIF_F_UFO)) {
+	if (((length > mtu) ||
+	    (skb && skb_is_gso(skb))) &&
+	    (sk->sk_protocol == IPPROTO_UDP) &&
+	    (rt->dst.dev->features & NETIF_F_UFO)) {
 		err = ip6_ufo_append_data(sk, getfrag, from, length, hh_len, fragheaderlen, transhdrlen, mtu, flags, rt);
 		if (err) {
 			goto error;
